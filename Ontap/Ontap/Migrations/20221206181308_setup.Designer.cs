// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Ontap.Data;

#nullable disable

namespace Ontap.Migrations
{
    [DbContext(typeof(OntapContext))]
    [Migration("20221206181308_setup")]
    partial class setup
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Ontap.Data.CauThu", b =>
                {
                    b.Property<int>("MaCauThu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaCauThu"), 1L, 1);

                    b.Property<int>("MaDoiBong")
                        .HasColumnType("int");

                    b.Property<int>("MaViTri")
                        .HasColumnType("int");

                    b.Property<int>("Soao")
                        .HasColumnType("int");

                    b.Property<string>("TenCauThu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaCauThu");

                    b.HasIndex("MaDoiBong");

                    b.HasIndex("MaViTri");

                    b.ToTable("CauThu");
                });

            modelBuilder.Entity("Ontap.Data.DoiBong", b =>
                {
                    b.Property<int>("MaDoiBong")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaDoiBong"), 1L, 1);

                    b.Property<string>("TenDoiBong")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaDoiBong");

                    b.ToTable("DoiBong");
                });

            modelBuilder.Entity("Ontap.Data.SanVanDong", b =>
                {
                    b.Property<int>("MaSan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaSan"), 1L, 1);

                    b.Property<string>("TenSan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaSan");

                    b.ToTable("SanVanDong");
                });

            modelBuilder.Entity("Ontap.Data.TranDau", b =>
                {
                    b.Property<int>("MaTranDau")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaTranDau"), 1L, 1);

                    b.Property<int>("MaDoiBong1")
                        .HasColumnType("int");

                    b.Property<int>("MaDoiBong2")
                        .HasColumnType("int");

                    b.Property<int>("MaSan")
                        .HasColumnType("int");

                    b.HasKey("MaTranDau");

                    b.HasIndex("MaDoiBong1");

                    b.HasIndex("MaDoiBong2");

                    b.HasIndex("MaSan");

                    b.ToTable("TranDau");
                });

            modelBuilder.Entity("Ontap.Data.ViTri", b =>
                {
                    b.Property<int>("MaViTri")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaViTri"), 1L, 1);

                    b.Property<string>("TenViTri")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaViTri");

                    b.ToTable("ViTri");
                });

            modelBuilder.Entity("Ontap.Data.CauThu", b =>
                {
                    b.HasOne("Ontap.Data.DoiBong", "DoiBong")
                        .WithMany("CauThu")
                        .HasForeignKey("MaDoiBong")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ontap.Data.ViTri", "ViTri")
                        .WithMany()
                        .HasForeignKey("MaViTri")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DoiBong");

                    b.Navigation("ViTri");
                });

            modelBuilder.Entity("Ontap.Data.TranDau", b =>
                {
                    b.HasOne("Ontap.Data.DoiBong", "DoiBong1")
                        .WithMany()
                        .HasForeignKey("MaDoiBong1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ontap.Data.DoiBong", "DoiBong2")
                        .WithMany()
                        .HasForeignKey("MaDoiBong2")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ontap.Data.SanVanDong", "SanVanDong")
                        .WithMany()
                        .HasForeignKey("MaSan")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DoiBong1");

                    b.Navigation("DoiBong2");

                    b.Navigation("SanVanDong");
                });

            modelBuilder.Entity("Ontap.Data.DoiBong", b =>
                {
                    b.Navigation("CauThu");
                });
#pragma warning restore 612, 618
        }
    }
}
